<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Docker部署后端及配置集群</title>
      <link href="/2024/04/12/Docker%E9%83%A8%E7%BD%B2%E5%90%8E%E7%AB%AF%E5%8F%8A%E9%85%8D%E7%BD%AE%E9%9B%86%E7%BE%A4/"/>
      <url>/2024/04/12/Docker%E9%83%A8%E7%BD%B2%E5%90%8E%E7%AB%AF%E5%8F%8A%E9%85%8D%E7%BD%AE%E9%9B%86%E7%BE%A4/</url>
      
        <content type="html"><![CDATA[<h1 id="Docker部署后端及配置集群"><a href="#Docker部署后端及配置集群" class="headerlink" title="Docker部署后端及配置集群"></a>Docker部署后端及配置集群</h1><h2 id="1、后端项目打包"><a href="#1、后端项目打包" class="headerlink" title="1、后端项目打包"></a>1、后端项目打包</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mvn clean install -Dmaven.test.skip=true</span><br></pre></td></tr></table></figure><h2 id="2、安装java镜像"><a href="#2、安装java镜像" class="headerlink" title="2、安装java镜像"></a>2、安装java镜像</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull openjdk</span><br></pre></td></tr></table></figure><h2 id="3、创建并启动java容器"><a href="#3、创建并启动java容器" class="headerlink" title="3、创建并启动java容器"></a>3、创建并启动java容器</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">#创建数据卷，上传JAR文件</span><br><span class="line">docker volume create j1</span><br><span class="line">#启动容器</span><br><span class="line">docker run -it -d --name j1 -v j1:/home/soft --net=host openjdk</span><br><span class="line">#进入j1容器</span><br><span class="line">docker exec -it j1 bash</span><br><span class="line">#启动Java项目</span><br><span class="line">nohup java -jar /home/soft/你的jar包名字.jar &gt;&gt; home/soft/java.log 2&gt;&amp;1 &amp;</span><br><span class="line">#查看日志</span><br><span class="line">tail -100f /home/soft/java.log</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="image-20240412135754999.png" alt="image-20240412135754999" style="zoom:50%;" /></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">#同理部署两个后端节点，记得修改好配置文件端口号</span><br><span class="line">docker volume create j2</span><br><span class="line">docker run -it -d --name j2 -v j2:/home/soft --net=host openjdk</span><br><span class="line">docker exec -it j2 bash</span><br><span class="line">nohup java -jar /home/soft/你的jar包名字.jar &gt;&gt; home/soft/java.log 2&gt;&amp;1 &amp;</span><br><span class="line">tail -100f /home/soft/java.log</span><br><span class="line"></span><br><span class="line">docker volume create j3</span><br><span class="line">docker run -it -d --name j3 -v j3:/home/soft --net=host openjdk</span><br><span class="line">docker exec -it j3 bash</span><br><span class="line">nohup java -jar /home/soft/你的jar包名字.jar &gt;&gt; home/soft/java.log 2&gt;&amp;1 &amp;</span><br><span class="line">tail -100f /home/soft/java.log</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="4、安装nginx镜像"><a href="#4、安装nginx镜像" class="headerlink" title="4、安装nginx镜像"></a>4、安装nginx镜像</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull nginx:1.25.1</span><br></pre></td></tr></table></figure><h2 id="5、对应目录创建nginx配置文件"><a href="#5、对应目录创建nginx配置文件" class="headerlink" title="5、对应目录创建nginx配置文件"></a>5、对应目录创建nginx配置文件</h2><p><img src="image-20240412193546678.png" alt="image-20240412193546678" style="zoom:50%;" /></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line">user  nginx;</span><br><span class="line">worker_processes  1;</span><br><span class="line">error_log  /var/log/nginx/error.log warn;</span><br><span class="line">pid        /var/run/nginx.pid;</span><br><span class="line"></span><br><span class="line">events &#123;</span><br><span class="line">    worker_connections  1024;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">http &#123;</span><br><span class="line">    include       /etc/nginx/mime.types;</span><br><span class="line">    default_type  application/octet-stream;</span><br><span class="line"></span><br><span class="line">    log_format  main  &#x27;$remote_addr - $remote_user [$time_local] &quot;$request&quot; &#x27;</span><br><span class="line">                      &#x27;$status $body_bytes_sent &quot;$http_referer&quot; &#x27;</span><br><span class="line">                      &#x27;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&#x27;;</span><br><span class="line"></span><br><span class="line">    access_log  /var/log/nginx/access.log  main;</span><br><span class="line"></span><br><span class="line">    sendfile        on;</span><br><span class="line">    #tcp_nopush     on;</span><br><span class="line"></span><br><span class="line">    keepalive_timeout  65;</span><br><span class="line"></span><br><span class="line">    #gzip  on;</span><br><span class="line"></span><br><span class="line">proxy_redirect          off;</span><br><span class="line">proxy_set_header        Host $host;</span><br><span class="line">proxy_set_header        X-Real-IP $remote_addr;</span><br><span class="line">proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;</span><br><span class="line">client_max_body_size    3072m;</span><br><span class="line">client_body_buffer_size   128k;</span><br><span class="line">proxy_connect_timeout   600s;</span><br><span class="line">proxy_send_timeout      600s;</span><br><span class="line">proxy_read_timeout      600s;</span><br><span class="line">proxy_buffer_size        4k;</span><br><span class="line">proxy_buffers           4 32k;</span><br><span class="line">proxy_busy_buffers_size  64k;</span><br><span class="line">proxy_temp_file_write_size 64k;</span><br><span class="line"></span><br><span class="line">upstream tomcat &#123;</span><br><span class="line">server 你的ip:8081;</span><br><span class="line">server 你的ip:8082;</span><br><span class="line">server 你的ip:8083;</span><br><span class="line">&#125;</span><br><span class="line">server &#123;</span><br><span class="line">        listen       8888;</span><br><span class="line">        server_name  你的ip;</span><br><span class="line">        location / &#123;</span><br><span class="line">            proxy_pass   http://tomcat;</span><br><span class="line">            index  index.html index.htm;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>指的是前端请求后端8888端口（根据自己的需求修改端口号），nginx根据负载均衡策略转发给8081、8082、8083（根据自己的需求修改端口号）</p><h2 id="6、创建并启动nginx容器"><a href="#6、创建并启动nginx容器" class="headerlink" title="6、创建并启动nginx容器"></a>6、创建并启动nginx容器</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -it -d --name n1 -v /home/n1/nginx.conf:/etc/nginx/nginx.conf --net=host --privileged nginx:1.25.1</span><br></pre></td></tr></table></figure><h2 id="7、整体结构"><a href="#7、整体结构" class="headerlink" title="7、整体结构"></a>7、整体结构</h2><p><img src="image-20240412195054467.png" alt="image-20240412195054467" style="zoom: 33%;" /></p><h2 id="8、检查"><a href="#8、检查" class="headerlink" title="8、检查"></a>8、检查</h2><p>检查云服务器端口开放情况</p><p>检查java.log日志运行情况</p>]]></content>
      
      
      <categories>
          
          <category> docker </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Docker配置RocketMQ</title>
      <link href="/2024/04/02/RocketMQ/"/>
      <url>/2024/04/02/RocketMQ/</url>
      
        <content type="html"><![CDATA[<h1 id="Docker配置RocketMQ"><a href="#Docker配置RocketMQ" class="headerlink" title="Docker配置RocketMQ"></a>Docker配置RocketMQ</h1><p><strong>1、拉取RocketMQ镜像</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull foxiswho/rocketmq:broker-4.5.1</span><br></pre></td></tr></table></figure><p><strong>2、启动注册中心Nameserver</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -d -p 9876:9876 --name rmqserver foxiswho/rocketmq:server-4.5.1</span><br></pre></td></tr></table></figure><p><strong>3、创建RocketMQ配置文件</strong></p><p><img src="image-20240411235840559.png" alt="image-20240411235840559" style="zoom: 50%;" /></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">//或者本地创建后上传到云主机上，路径可以根据自己设定</span><br><span class="line">vim /usr/local/roketmq/conf/broker.conf</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">brokerIP1 = 填写你的云主机ip</span><br><span class="line">brokerClusterName = DefaultCluster</span><br><span class="line">brokerName = broker-a</span><br><span class="line">brokerId = 0</span><br><span class="line">deleteWhen = 04</span><br><span class="line">fileReservedTime = 48</span><br><span class="line">brokerRole = ASYNC_MASTER</span><br><span class="line">flushDiskType = ASYNC_FLUSH</span><br><span class="line">enablePropertyFilter=true</span><br></pre></td></tr></table></figure><p><strong>4、启动RocketMQ</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -d -p 10911:10911 -p 10909:10909 --name rmqbroker --link rmqserver:namesrv -e &quot;NAMESRV_ADDR=namesrv:9876&quot; -e &quot;JAVA_OPTS=-Duser.home=/opt&quot; -e &quot;JAVA_OPT_EXT=-server -Xms128m -Xmx128m&quot; -v  /usr/local/rocketmq/conf/broker.conf:/etc/rocketmq/broker.conf foxiswho/rocketmq:broker-4.5.1</span><br></pre></td></tr></table></figure><p><strong>5、拉取RocketMQ-dashboard镜像</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull pangliang/rocketmq-console-ng</span><br></pre></td></tr></table></figure><p><strong>6、启动dashboard</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -d --name rmqconsole -p 8180:8080 --link rmqserver:namesrv -e &quot;JAVA_OPTS=-Drocketmq.namesrv.addr=namesrv:9876 -Dcom.rocketmq.sendMessageWithVIPChannel=false&quot;  -t pangliang/rocketmq-console-ng</span><br></pre></td></tr></table></figure><p><strong>7、dashboard中添加topic</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://xxx.xxx.xxx.xxx:8180</span><br></pre></td></tr></table></figure><p><strong>8、检查</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">//检查服务运行状况</span><br><span class="line">docker ps -a</span><br></pre></td></tr></table></figure><p><img src="image-20240412000329429.png" alt="image-20240412000329429"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">//检查服务运行是否成功、依次检查Nameserver、RocketMQ、RocketMQ-dashboard（暂不演示）</span><br><span class="line">docker logs -CONTAINER ID</span><br></pre></td></tr></table></figure><p><img src="image-20240412000517073.png" alt="image-20240412000517073"></p><p><img src="image-20240412000735422.png" alt="image-20240412000735422"></p><p><img src="image-20240412001315222.png" alt="image-20240412001315222" style="zoom:33%;" /></p><p><img src="image-20240412001331680.png" alt="image-20240412001331680" style="zoom: 33%;" /></p><p><img src="image-20240412001355627.png" alt="image-20240412001355627" style="zoom:33%;" /></p><p>参考链接</p><hr><p><a href="https://www.cnblogs.com/d1012181765/p/15603378.html">https://www.cnblogs.com/d1012181765/p/15603378.html</a></p><p><a href="https://blog.csdn.net/qq_45297578/article/details/128723168">https://blog.csdn.net/qq_45297578/article/details/128723168</a></p>]]></content>
      
      
      <categories>
          
          <category> docker </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Docker配置MySQL集群</title>
      <link href="/2024/04/01/Docker%E9%85%8D%E7%BD%AEMySQL%E9%9B%86%E7%BE%A4/"/>
      <url>/2024/04/01/Docker%E9%85%8D%E7%BD%AEMySQL%E9%9B%86%E7%BE%A4/</url>
      
        <content type="html"><![CDATA[<h1 id="Docker配置MySQL集群"><a href="#Docker配置MySQL集群" class="headerlink" title="Docker配置MySQL集群"></a>Docker配置MySQL集群</h1><h2 id="1、安装MySQL集群PXC镜像"><a href="#1、安装MySQL集群PXC镜像" class="headerlink" title="1、安装MySQL集群PXC镜像"></a><strong>1、安装MySQL集群PXC镜像</strong></h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull percona/percona-xtradb-cluster:5.7</span><br></pre></td></tr></table></figure><h2 id="2、创建docker内部网段"><a href="#2、创建docker内部网段" class="headerlink" title="2、创建docker内部网段"></a><strong>2、创建docker内部网段</strong></h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker network create pxc-network</span><br></pre></td></tr></table></figure><h2 id="3、创建数据卷"><a href="#3、创建数据卷" class="headerlink" title="3、创建数据卷"></a><strong>3、创建数据卷</strong></h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">//对应五节点集群方案</span><br><span class="line">docker volume create v1</span><br><span class="line">docker volume create v2</span><br><span class="line">docker volume create v3</span><br><span class="line">docker volume create v4</span><br><span class="line">docker volume create v5</span><br></pre></td></tr></table></figure><h2 id="4、创建容器并运行"><a href="#4、创建容器并运行" class="headerlink" title="4、创建容器并运行"></a><strong>4、创建容器并运行</strong></h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">//替换自己的mysql密码</span><br><span class="line">docker run -d -p 3306:3306 -e MYSQL_ROOT_PASSWORD=你设定的mysql密码 -e CLUSTER_NAME=cluster1 -v v1:/var/lib/mysql --name=node1 --net=pxc-network percona/percona-xtradb-cluster:5.7</span><br><span class="line"></span><br><span class="line">//主节点启动后经测试链接正常后，再创建其以下节点</span><br><span class="line">docker run -d -p 3307:3306 -e MYSQL_ROOT_PASSWORD=你设定的mysql密码 -e CLUSTER_NAME=cluster1 -e CLUSTER_JOIN=node1 -v v2:/var/lib/mysql --name=node2 --net=pxc-network \percona/percona-xtradb-cluster:5.7</span><br><span class="line"></span><br><span class="line">docker run -d -p 3308:3306 -e MYSQL_ROOT_PASSWORD=你设定的mysql密码 -e CLUSTER_NAME=cluster1 -e CLUSTER_JOIN=node1 -v v3:/var/lib/mysql --name=node3 --net=pxc-network \percona/percona-xtradb-cluster:5.7</span><br><span class="line"></span><br><span class="line">docker run -d -p 3309:3306 -e MYSQL_ROOT_PASSWORD=你设定的mysql密码 -e CLUSTER_NAME=cluster1 -e CLUSTER_JOIN=node1 -v v4:/var/lib/mysql --name=node4 --net=pxc-network \percona/percona-xtradb-cluster:5.7</span><br><span class="line"></span><br><span class="line">docker run -d -p 3310:3306 -e MYSQL_ROOT_PASSWORD=你设定的mysql密码 -e CLUSTER_NAME=cluster1 -e CLUSTER_JOIN=node1 -v v5:/var/lib/mysql --name=node5 --net=pxc-network \percona/percona-xtradb-cluster:5.7</span><br></pre></td></tr></table></figure><h2 id="5、云服务器安全组端口开放"><a href="#5、云服务器安全组端口开放" class="headerlink" title="5、云服务器安全组端口开放"></a><strong>5、云服务器安全组端口开放</strong></h2><p><img src="image-20240412132606413.png" alt="image-20240412132606413" style="zoom:33%;" /></p><h2 id="6、检查运行情况"><a href="#6、检查运行情况" class="headerlink" title="6、检查运行情况"></a><strong>6、检查运行情况</strong></h2><h3 id="6-1-检查容器内运行情况"><a href="#6-1-检查容器内运行情况" class="headerlink" title="6.1 检查容器内运行情况"></a>6.1 检查容器内运行情况</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker ps -a</span><br></pre></td></tr></table></figure><p><img src="image-20240412133313368.png" alt="image-20240412133313368"></p><h3 id="6-2-检查数据库链接情况"><a href="#6-2-检查数据库链接情况" class="headerlink" title="6.2 检查数据库链接情况"></a>6.2 检查数据库链接情况</h3><p><img src="image-20240412133514624.png" alt="image-20240412133514624" style="zoom: 50%;" /></p>]]></content>
      
      
      <categories>
          
          <category> docker </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>如何将一个标量转换为与目标张量形状相同</title>
      <link href="/2023/05/15/%E5%A6%82%E4%BD%95%E5%B0%86%E4%B8%80%E4%B8%AA%E6%A0%87%E9%87%8F%E8%BD%AC%E6%8D%A2%E4%B8%BA%E4%B8%8E%E7%9B%AE%E6%A0%87%E5%BC%A0%E9%87%8F%E5%BD%A2%E7%8A%B6%E7%9B%B8%E5%90%8C/"/>
      <url>/2023/05/15/%E5%A6%82%E4%BD%95%E5%B0%86%E4%B8%80%E4%B8%AA%E6%A0%87%E9%87%8F%E8%BD%AC%E6%8D%A2%E4%B8%BA%E4%B8%8E%E7%9B%AE%E6%A0%87%E5%BC%A0%E9%87%8F%E5%BD%A2%E7%8A%B6%E7%9B%B8%E5%90%8C/</url>
      
        <content type="html"><![CDATA[<h4 id="背景"><a href="#背景" class="headerlink" title="背景"></a><strong>背景</strong></h4><hr><p>参考别人的代码中，它直接将一个标量进行reshape，导致我报错了，但它可以正常运行，目前还不知道是什么原因，后面再看看。<br>在扩散模型的<strong>Forward process</strong>中，可以根据以下公式计算得到t时刻的带噪图像xt，其中αt是表示噪声比例的一个系数，是一个标量。在<strong>Pytorch</strong>中一个标量不能直接和一个不同维度的张量进行广播操作，所以需要将一个标量转换为与目标张量形状相同。</p><script type="math/tex; mode=display">x_t = \sqrt{ \bar \alpha_{t}}x_0 + \sqrt{1-\bar \alpha_{t}}\epsilon</script><h4 id="方法"><a href="#方法" class="headerlink" title="方法"></a><strong>方法</strong></h4><hr><p>假设x0维度- [N,C,H,W] -  [8,3,64,64] , 而αt维度为零维 , 所以想到了以下两种方式</p><p><strong>1、先unsqueeze，再repeat，最后循环unsqueeze</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sqrt_alpha_t_cumprod = self.sqrt_alpha_cumprod[t].unsqueeze(-<span class="number">1</span>).repeat(batch_size)</span><br><span class="line">sqrt_one_minus_alpha_t_cumprod = self.sqrt_one_minus_alpha_cumprod[t].unsqueeze(-<span class="number">1</span>).repeat(batch_size)</span><br><span class="line"><span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(original_shape)-<span class="number">1</span>):</span><br><span class="line">    sqrt_alpha_t_cumprod = sqrt_alpha_t_cumprod.unsqueeze(-<span class="number">1</span>)</span><br><span class="line">    sqrt_one_minus_alpha_t_cumprod = sqrt_one_minus_alpha_t_cumprod.unsqueeze(-<span class="number">1</span>)</span><br></pre></td></tr></table></figure><p>αt的维度变化 - [1] - [N] - [N,1] - [N,1,1] - [N,1,1,1]</p><p><strong>2、循环unsqueeze，expand_as</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">sqrt_alpha_t_cumprod = self.sqrt_alpha_cumprod[t]</span><br><span class="line">sqrt_one_minus_alpha_t_cumprod = self.sqrt_one_minus_alpha_cumprod[t]</span><br><span class="line"><span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(original_shape)):</span><br><span class="line">    sqrt_alpha_t_cumprod = sqrt_alpha_t_cumprod.unsqueeze(-<span class="number">1</span>)</span><br><span class="line">    sqrt_one_minus_alpha_t_cumprod = sqrt_one_minus_alpha_t_cumprod.unsqueeze(-<span class="number">1</span>)</span><br><span class="line">sqrt_alpha_t_cumprod = sqrt_alpha_t_cumprod.expand_as(original)</span><br><span class="line">sqrt_one_minus_alpha_t_cumprod = sqrt_one_minus_alpha_t_cumprod.expand_as(noise)</span><br></pre></td></tr></table></figure><p>αt的维度变化 - [1]  - [1,1] - [1,1,1] - [1,1,1,1] - [8,3,64,64]</p><p><strong>3、作者的方法</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sqrt_alpha_cumprod = self.sqrt_alpha_cumprod[t].reshape(batch_size)</span><br><span class="line">sqrt_one_minus_alpha_cumprod = self.sqrt_one_minus_alpha_cumprod[t].reshape(batch_size)</span><br><span class="line"><span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(original_shape)-<span class="number">1</span>):</span><br><span class="line">    sqrt_alpha_cumprod = sqrt_alpha_cumprod.unsqueeze(-<span class="number">1</span>)</span><br><span class="line">    sqrt_one_minus_alpha_cumprod = sqrt_one_minus_alpha_cumprod.unsqueeze(-<span class="number">1</span>)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> pytorch </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>hexo加载公式问题</title>
      <link href="/2023/05/09/hexo%E5%8A%A0%E8%BD%BD%E5%85%AC%E5%BC%8F%E9%97%AE%E9%A2%98/"/>
      <url>/2023/05/09/hexo%E5%8A%A0%E8%BD%BD%E5%85%AC%E5%BC%8F%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<p><a href="https://blog.csdn.net/yexiaohhjk/article/details/82526604">配置方法参考</a></p><p>配置后正常显示公式</p><p><img src="image-20230509153716208.png" alt="image-20230509153716208"></p>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>hexo命令操作</title>
      <link href="/2023/05/09/hexo%E5%91%BD%E4%BB%A4%E6%93%8D%E4%BD%9C/"/>
      <url>/2023/05/09/hexo%E5%91%BD%E4%BB%A4%E6%93%8D%E4%BD%9C/</url>
      
        <content type="html"><![CDATA[<p><code>hexo new post &quot; &quot;</code>：创建一篇博客</p><p><code>hexo cl</code>：清理public文件夹</p><p><code>hexo g</code>：生成public文件夹</p><p><code>hexo s</code>：启动博客</p><p><code>hexo deploy</code>：本地修改同步至远端</p>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>hexo加载图片问题</title>
      <link href="/2023/05/09/hexo%E5%8A%A0%E8%BD%BD%E5%9B%BE%E7%89%87%E9%97%AE%E9%A2%98/"/>
      <url>/2023/05/09/hexo%E5%8A%A0%E8%BD%BD%E5%9B%BE%E7%89%87%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<p><a href="https://zhuanlan.zhihu.com/p/476601594">配置方法参考</a></p><p><strong>1、配置图像根目录</strong></p><p><img src="image-20230509151512393.png" alt="image-20230509151512393" style="zoom:50%;" /></p><p><strong>2、删除图像名前面的斜杠</strong></p><p><img src="image-20230509151638033.png" alt="image-20230509151638033" style="zoom:67%;" /></p>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
    </entry>
    
    
  
  
</search>
